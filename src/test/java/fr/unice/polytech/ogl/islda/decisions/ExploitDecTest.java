package fr.unice.polytech.ogl.islda.decisions;

import fr.unice.polytech.ogl.islda.answers.Answer;
import fr.unice.polytech.ogl.islda.answers.ExploitAns;
import fr.unice.polytech.ogl.islda.extras.ExploitExt;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.*;

/**
 * @author Nicolas HORY
 * @version 13/03/15.
 */
public class ExploitDecTest {
    private ExploitDec exploitDec;
    private String stringAns;

    @Before
    public void setUp() {
        exploitDec = new ExploitDec("");
        stringAns = "{\n" +
                "    \"status\": \"OK\", \"cost\": 38,\n" +
                "    \"extras\": {\n" +
                "        \"amount\": 123\n" +
                "    }\n" +
                "}";
    }

    @Test
    public void parseResults() {
        Answer answer = exploitDec.parseResults(stringAns);
        ExploitAns oracle1 = new ExploitAns("OK", 38, new ExploitExt(123));
        assertEquals(oracle1, answer);
        ExploitAns oracle2 = new ExploitAns("OK", 38, new ExploitExt(120));
        assertNotEquals(oracle2, answer);
        assertEquals(new ArrayList<>(), answer.getExtras().getResources());
    }

    @Test
    public void testIsValid(){
        ExploitDec dec = new ExploitDec("WOOD");
        assertTrue(dec.isValid());

        dec = new ExploitDec(null);
        assertFalse(dec.isValid());
    }

    @Test
    public void testEqualsAndHashcode() {
        String wood = "WOOD";
        ExploitDec x = new ExploitDec(wood);
        ExploitDec y = new ExploitDec(wood);
        StopDec z = new StopDec();
        Assert.assertTrue(x.equals(y) && y.equals(x));
        Assert.assertTrue(x.equals(x));
        Assert.assertFalse(x.equals(z));
        Assert.assertTrue(x.hashCode() == y.hashCode());
    }
}
